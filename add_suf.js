const suffixes = [
    '', 'к', 'м', 'б', 'т', 'кв', 'квд', 'кнт', 'с', 'сеп', 'окт', 'н', 'д',
    'ун', 'дуод', 'тред', 'квадек', 'квиндек', 'сексдек', 'септдек', 'октодек',
    'новемдек', 'виг', 'унвиг', 'дуовиг', 'тревиг', 'кваторвиг', 'квинвиг',
    'сексвиг', 'септенвиг', 'октовиг', 'новемвиг', 'триг', 'унтриг', 'дуотриг',
    'третриг', 'кватортриг', 'квинтриг', 'секстриг', 'септентриг', 'октотриг',
    'новемтриг', 'квадраг', 'унквадраг', 'дуоквадраг', 'треквадраг', 'кваторквадраг',
    'кун', 'кдуо', 'ктре', 'кква', 'ккви', 'ксе', 'ксе', 'кокт', 'крек', 'вик',
    'вун', 'вдуо', 'втре', 'вква', 'вкви', 'все', 'все', 'вокт', 'врек',
    'три', 'триун', 'тридуо', 'тритре', 'триква', 'трикви', 'трисек', 'трисе',
    'трокт', 'треквак', 'викв', 'викду', 'витре', 'виква', 'викви', 'висек',
    'висе', 'виокт', 'вирек', 'тетри', 'скуд', 'скре', 'сква', 'скви', 'сексек',
    'сепсек', 'ценсе', 'дукце', 'дикце', 'генке', 'макке', 'сии', 'синке',
    'ринке', 'мсик', 'дивис', 'микокт', 'монум', 'мосум', 'виксек', 'вокт',
    'вирек', 'тветри', 'бинек', 'бинце', 'хинке', 'кинке', 'минн', 'ностен',
    'боко', 'косик', 'мини', 'биокт', 'биоктер', 'инте', 'октет', 'остет',
    'текуал', 'ностендекре', 'сентйод', 'кадет', 'кадест', 'ладест', 'ладст',
    'икене', 'икетом', 'септекем', 'семтокем', 'семтакем', 'октексем', 'октексте',
    'прадекем', 'сентей', 'сентиокем', 'сетнтекем', 'октекем', 'декем', 'дон',
    'доне', 'декакон', 'декакоен', 'сент', 'секостекем', 'висоқем', 'сек',
    'сеокт', 'цезедек', 'цети', 'цетекс', 'секст', 'окагоник', 'окагон',
    'сeптетех', 'сепоктокем', 'сепокт', 'сеп', 'каптун', 'каптин', 'капони', 'сорок',
    'цети', 'октоник', 'октон', 'септи', 'септ', 'сепотрах', 'октомат', 'октатоп',
    'кастет', 'октора', 'стар', 'кватрал', 'крион', 'трион', 'кунун', 'нyн',
    'ун', 'виктевен', 'викокем', 'виксеп', 'виксепту', 'виокт', 'виоктет',
    'зeон', 'зонаде', 'бисун', 'бисек', ' средак'
];


/**
 * adds a sufics to a value
 * @param {number} value 
 * @returns a number as a string with a rus suffics
 */
function add_suf(value = 0) {
    //Проверка на число
    if (!Number.isFinite(value)) return String(value)
    //проверка на отрицательное число
    let negative = ''
    if (value < 0) {
        negative = '-'
        value = Math.abs(value)
    }
    //проверка на число меньше 1000
    const base = 1000;
    if (value < base) return `${negative}${value}`;
    //Назождение  айди суффикса
    let pow = Math.floor(Math.log(value) / Math.log(base));
    pow = Math.min(pow, suffixes.length - 1);

    //Создание числа
    const abbreviated = value / Math.pow(base, pow);
    const rounded = Math.round(abbreviated * 10) / 10; // округление до двух знаков после запятой

    //Возвращение числа
    return `${negative}${ rounded }${ suffixes[pow] }`;
}
module.exports = add_suf